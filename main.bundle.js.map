{"version":3,"sources":["./demo/$_lazy_route_resource lazy","./demo/app/app.component.html","./demo/app/app.component.scss","./demo/app/app.component.ts","./demo/app/app.module.ts","./demo/app/reactive-form/reactive-form.component.html","./demo/app/reactive-form/reactive-form.component.scss","./demo/app/reactive-form/reactive-form.component.ts","./demo/app/template-form/template-form.component.html","./demo/app/template-form/template-form.component.scss","./demo/app/template-form/template-form.component.ts","./demo/environments/environment.ts","./demo/main.ts","./src/components/phone-number-input/phone-number-input.component.html","./src/components/phone-number-input/phone-number-input.component.scss","./src/components/phone-number-input/phone-number-input.component.ts","./src/index.ts","./src/module.ts","./src/pipes/country-search.pipe.ts","./src/services/country.service.ts","./src/validators/phone-validator.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./demo/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./demo/$$_lazy_route_resource lazy\n// module id = ./demo/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n\\n  <div class=\\\"py-3 text-center\\\">\\n      <h2>ngx-phone</h2>\\n      <p class=\\\"lead\\\">Angular Form Control</p>\\n  </div>\\n\\n  <div class=\\\"row mb-5\\\">\\n\\n    <app-template-form class=\\\"col-md-6\\\"></app-template-form>\\n    <app-reactive-form class=\\\"col-md-6\\\"></app-reactive-form>\\n\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./demo/app/app.component.html\n// module id = ./demo/app/app.component.html\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./demo/app/app.component.scss\n// module id = ./demo/app/app.component.scss\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./demo/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { NgxPhoneModule } from '../../src';\nimport { AppComponent } from './app.component';\nimport { TemplateFormComponent } from './template-form/template-form.component';\nimport { ReactiveFormComponent } from './reactive-form/reactive-form.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { BsDropdownModule } from 'ngx-bootstrap';\nimport { CovalentHighlightModule } from '@covalent/highlight';\nimport * as LocalizedCountryData from 'i18n-iso-countries/langs/en.json';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TemplateFormComponent,\n    ReactiveFormComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CovalentHighlightModule,\n    BsDropdownModule.forRoot(),\n    NgxPhoneModule.forRoot(LocalizedCountryData)\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./demo/app/app.module.ts","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-header\\\">\\n    Reactive Forms\\n  </div>\\n  <div class=\\\"card-body\\\">\\n\\n    <pre>{{form.value | json}}</pre>\\n\\n    <hr>\\n\\n    <form [formGroup]=\\\"form\\\">\\n\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"name\\\" class=\\\"col-sm-2 col-form-label\\\">Name</label>\\n        <div class=\\\"col-sm-10\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" formControlName=\\\"name\\\">\\n          <small *ngIf=\\\"form.get('name').invalid\\\" class=\\\"form-text text-danger\\\">Name must have at least 5 characters</small>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"email\\\" class=\\\"col-sm-2 col-form-label\\\">Email</label>\\n        <div class=\\\"col-sm-10\\\">\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" formControlName=\\\"email\\\">\\n          <small *ngIf=\\\"form.get('email').invalid\\\" class=\\\"form-text text-danger\\\">A valid email address is required</small>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col-sm-2 col-form-label\\\">Phone</label>\\n        <div class=\\\"col-sm-10\\\">\\n          <ngx-phone-number-input formControlName=\\\"phone\\\"></ngx-phone-number-input>\\n          <small *ngIf=\\\"form.get('phone').invalid\\\" class=\\\"form-text text-danger\\\">Invalid phone number</small>\\n        </div>\\n      </div>\\n\\n    </form>\\n\\n    <hr>\\n\\n    <td-highlight lang=\\\"html\\\">\\n      <![CDATA[\\n        <form [formGroup]=\\\"form\\\">\\n          ...\\n          <div>\\n            <label>Phone</label>\\n            <div>\\n              <ngx-phone-number-input formControlName=\\\"phone\\\">\\n              </ngx-phone-number-input>\\n              <small *ngIf=\\\"form.get('phone').invalid\\\">\\n                Invalid phone number\\n              </small>\\n            </div>\\n          </div>\\n        </form>\\n        ]]>\\n    </td-highlight>\\n\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./demo/app/reactive-form/reactive-form.component.html\n// module id = ./demo/app/reactive-form/reactive-form.component.html\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./demo/app/reactive-form/reactive-form.component.scss\n// module id = ./demo/app/reactive-form/reactive-form.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-reactive-form',\n  templateUrl: './reactive-form.component.html',\n  styleUrls: ['./reactive-form.component.scss']\n})\nexport class ReactiveFormComponent implements OnInit {\n\n  public form: FormGroup;\n\n  constructor(private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      name: ['Noam Chomsky', Validators.minLength(5)],\n      email: ['noam@chomsky', Validators.compose([Validators.required, Validators.email])],\n      phone: ['+31684567890']\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./demo/app/reactive-form/reactive-form.component.ts","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-header\\\">\\n    Template-driven Forms\\n  </div>\\n  <div class=\\\"card-body\\\">\\n\\n    <pre>{{user | json}}</pre>\\n\\n    <hr>\\n\\n    <form #form=\\\"ngForm\\\">\\n\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"name\\\" class=\\\"col-sm-2 col-form-label\\\">Name</label>\\n        <div class=\\\"col-sm-10\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" name=\\\"name\\\" [(ngModel)]=\\\"user.name\\\" #name=\\\"ngModel\\\" minlength=\\\"5\\\">\\n          <small *ngIf=\\\"name.invalid\\\" class=\\\"form-text text-danger\\\">Name must have at least 5 characters</small>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"email\\\" class=\\\"col-sm-2 col-form-label\\\">Email</label>\\n        <div class=\\\"col-sm-10\\\">\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" name=\\\"email\\\" [(ngModel)]=\\\"user.email\\\" #email=\\\"ngModel\\\" email required>\\n          <small *ngIf=\\\"email.invalid\\\" class=\\\"form-text text-danger\\\">A valid email address is required</small>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col-sm-2 col-form-label\\\">Phone</label>\\n        <div class=\\\"col-sm-10\\\">\\n          <ngx-phone-number-input #phone=\\\"ngModel\\\" [(ngModel)]=\\\"user.phone\\\" name=\\\"phone\\\"></ngx-phone-number-input>\\n          <small *ngIf=\\\"phone.invalid\\\" class=\\\"form-text text-danger\\\">Invalid phone number</small>\\n        </div>\\n      </div>\\n\\n    </form>\\n\\n    <hr>\\n\\n    <td-highlight lang=\\\"html\\\">\\n      <![CDATA[\\n        <form #form=\\\"ngForm\\\">\\n          ...\\n          <div>\\n            <label>Phone</label>\\n            <div>\\n              <ngx-phone-number-input #phone=\\\"ngModel\\\" \\n                    [(ngModel)]=\\\"user.phone\\\" name=\\\"phone\\\">\\n              </ngx-phone-number-input>\\n              <small *ngIf=\\\"phone.invalid\\\">\\n                Invalid phone number\\n              </small>\\n            </div>\\n          </div>\\n        </form>\\n        ]]>\\n    </td-highlight>\\n\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./demo/app/template-form/template-form.component.html\n// module id = ./demo/app/template-form/template-form.component.html\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./demo/app/template-form/template-form.component.scss\n// module id = ./demo/app/template-form/template-form.component.scss\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-template-form',\n  templateUrl: './template-form.component.html',\n  styleUrls: ['./template-form.component.scss']\n})\nexport class TemplateFormComponent {\n  user: any = {\n    name: 'Noam Chomsky',\n    email: 'noam@chomsky.com',\n    phone: '+31684567890'\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./demo/app/template-form/template-form.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./demo/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./demo/main.ts","module.exports = \"<div class=\\\"input-group\\\">\\n  <div class=\\\"input-group-prepend\\\" dropdown (isOpenChange)=\\\"isOpenChange($event)\\\">\\n    <button dropdownToggle type=\\\"button\\\" class=\\\"btn btn-outline-secondary dropdown-toggle\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n      +{{ country?.dialCode }}\\n    </button>\\n    <div *dropdownMenu class=\\\"dropdown-menu\\\">\\n      <button *ngFor=\\\"let country of countries | countrySearch: filter\\\" class=\\\"dropdown-item\\\" (click)=\\\"setCountry(country)\\\" type=\\\"button\\\">\\n        <span>+{{country.dialCode}}</span> {{country.name}}\\n      </button>\\n    </div>\\n  </div>\\n  <input type=\\\"text\\\" [value]=\\\"number\\\" (input)=\\\"onNumberInput($event.target.value)\\\" (blur)=\\\"onNumberBlur()\\\" class=\\\"form-control form-control-xs\\\">\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/phone-number-input/phone-number-input.component.html\n// module id = ./src/components/phone-number-input/phone-number-input.component.html\n// module chunks = main","module.exports = \".dropdown-menu {\\n  max-height: 200px;\\n  overflow-y: scroll; }\\n\\n.dropdown-item {\\n  padding-left: 1rem;\\n  padding-right: 2rem; }\\n\\n.dropdown-item span {\\n    color: grey;\\n    min-width: 3rem;\\n    display: inline-block; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/phone-number-input/phone-number-input.component.scss\n// module id = ./src/components/phone-number-input/phone-number-input.component.scss\n// module chunks = main","import { Component, OnInit, Input, forwardRef, HostListener } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\nimport { CountryCode, isValidNumber, format, parse, TelephoneNumber, ParsedNumber } from 'libphonenumber-js';\nimport { Country } from '../../models/country';\nimport { CountryService } from '../../services/country.service';\nimport { PhoneValidator } from '../../validators/phone-validator';\n\n@Component({\n  selector: 'ngx-phone-number-input',\n  templateUrl: './phone-number-input.component.html',\n  styleUrls: ['./phone-number-input.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PhoneNumberInputComponent),\n      multi: true\n    },\n    {\n      provide: NG_VALIDATORS,\n      useClass: PhoneValidator,\n      multi: true\n    }\n  ]\n})\nexport class PhoneNumberInputComponent implements OnInit, ControlValueAccessor {\n  public number: string;\n  public filter?: string;\n  public country: Country;\n  public countries: Country[];\n\n  private defaultCountry: Country;\n\n  private onChange = (_: any) => {};\n  private onTouched = (_: any) => {};\n\n  constructor(private countryService: CountryService) {}\n\n  get phone() {\n    let number = <TelephoneNumber>this.number;\n    let country = <CountryCode>(this.country && this.country.code);\n\n    return format(number, country, 'E.164')\n  }\n\n  set phone(value: any) {\n    let { phone = value, country = this.defaultCountry } = parse(value || '');\n\n    this.number = phone;\n    this.country = this.countries.find(c => c.code === country);\n  }\n\n  ngOnInit() {\n    this.number = '';\n    this.countries = this.countryService.getCountries();\n    this.country = this.defaultCountry = this.countries[0];\n  }\n\n  @HostListener('document:keypress', ['$event'])\n  handleKeyboardEvent(event: KeyboardEvent) {\n    if (this.filter !== undefined) {\n      if (event.key.match(/^[a-z]$/i)) {\n        this.filter = this.filter + event.key;\n      }\n    }\n  }\n\n  writeValue(value: any): void {\n    this.phone = value;\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  setCountry(country: Country) {\n    this.country = country;\n    this.onChange(this.phone);\n  }\n\n  onNumberInput(value: string) {\n    this.number = value;\n    this.onChange(this.phone);\n  }\n\n  onNumberBlur() {\n    this.onTouched(this.phone);\n  }\n\n  isOpenChange(isOpen: boolean) {\n    this.filter = isOpen ? '' : undefined;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/phone-number-input/phone-number-input.component.ts","export { PhoneNumberInputComponent } from \"./components/phone-number-input/phone-number-input.component\";\nexport { NgxPhoneModule } from \"./module\";\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts","import { NgModule, ModuleWithProviders } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\nimport { BsDropdownModule } from \"ngx-bootstrap\";\nimport { CountryService } from \"./services/country.service\";\nimport { CountrySearchPipe } from \"./pipes/country-search.pipe\";\nimport { PhoneNumberInputComponent } from \"./components/phone-number-input/phone-number-input.component\";\n\n@NgModule({\n  imports: [CommonModule, FormsModule, BsDropdownModule],\n  declarations: [PhoneNumberInputComponent, CountrySearchPipe],\n  exports: [PhoneNumberInputComponent]\n})\nexport class NgxPhoneModule {\n  public static forRoot(localizedCountryData: any): ModuleWithProviders {\n    return {\n      ngModule: NgxPhoneModule,\n      providers: [\n        {\n          provide: 'LocalizedCountryData',\n          useValue: localizedCountryData\n        },\n        {\n          provide: CountryService,\n          useClass: CountryService\n        }\n      ]\n    };\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/module.ts","import { Pipe, PipeTransform } from '@angular/core';\nimport { Country } from '../models/country';\n\n@Pipe({\n  name: 'countrySearch'\n})\nexport class CountrySearchPipe implements PipeTransform {\n  transform(value: Country[], filter?: string): any {\n    let result = value;\n\n    if (value && filter) {\n      const filterNormalized = filter.toUpperCase();\n      const filtered = result.filter((country: Country) => country.name.toUpperCase().startsWith(filterNormalized));\n      if (filtered.length > 0) { result = filtered; }\n    }\n\n    return result;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pipes/country-search.pipe.ts","import { Injectable, Inject } from '@angular/core';\nimport { getPhoneCode, CountryCode } from 'libphonenumber-js';\nimport { Country } from '../models/country';\n\n@Injectable()\nexport class CountryService {\n  private cache: Country[];\n\n  constructor(@Inject('LocalizedCountryData') private localizedCountryData: any) { }\n\n  getCountries(): Country[] {\n    if (!this.cache) {\n      this.cache = this.loadCountries();\n    }\n\n    return this.cache;\n  }\n\n  private loadCountries(): Country[] {\n    const results: Country[] = [];\n\n    const countries = this.localizedCountryData.countries;\n\n    for (const country of Object.keys(countries)) {\n      const dialCode = this.getDialCode(country);\n      if (dialCode) {\n        results.push(<Country>{\n          code: country,\n          name: countries[country],\n          dialCode: dialCode\n        });\n      }\n    }\n\n    results.sort((a, b) => (a.name.toUpperCase() > b.name.toUpperCase() ? 1 : -1));\n\n    return results;\n  }\n\n  private getDialCode(countryCode: string): string | undefined {\n    try {\n      const code = getPhoneCode(<CountryCode>countryCode);\n      return code as string;\n    } catch {\n      return undefined;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/country.service.ts","import { Validator, AbstractControl } from \"@angular/forms\";\nimport { isValidNumber, TelephoneNumber } from \"libphonenumber-js\";\n\nexport class PhoneValidator implements Validator {\n    validate(control: AbstractControl): { [key: string]: any; } {\n        const value = control.value;\n    \n        if (value) {\n          if (!isValidNumber(<TelephoneNumber>value)) {\n            return { 'invalid-phone-number': true };\n          }\n        }\n    \n        return null;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/validators/phone-validator.ts"],"sourceRoot":"webpack:///"}